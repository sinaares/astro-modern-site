---
// src/components/Navbar.astro

interface NavItem {
  label: string;
  href: string;
  submenu?: NavItem[];
}

interface Props {
  logoSrc: string;
  logoAlt: string;
  brandName: string;
  navItems: NavItem[];
  externalLinks: NavItem[];
}

const { logoSrc, logoAlt, brandName, navItems, externalLinks } = Astro.props;
---

<nav class="navbar">
  <div class="nav-container">
    <div class="nav-logo">
      <img src={logoSrc} alt={logoAlt} />
      <span><a href="/">{brandName}</a></span>
    </div>

    <div class="nav-menu-container">
      <ul class="nav-menu">
        {
          navItems.map((item) => (
            <li class={item.submenu ? "dropdown" : ""}>
              <a href={item.href} class="nav-link">
                {item.label}{" "}
                {item.submenu ? <span class="dropdown-chevron">▾</span> : ""}
              </a>
              {item.submenu && (
                <ul class="dropdown-menu">
                  {item.submenu.map((sub) => (
                    <li>
                      <a href={sub.href}>{sub.label}</a>
                    </li>
                  ))}
                </ul>
              )}
            </li>
          ))
        }

        {/* External links like Kokpit Giriş and TNB Filo Giriş */}
        <li class="external-links">
          {
            externalLinks.map((link) => (
              <a
                href={link.href}
                target="_blank"
                rel="noopener noreferrer"
                class={`external-btn ${
                  link.label.includes("Kokpit") ? "kokpit" : "filo"
                }`}
              >
                {link.label}
              </a>
            ))
          }
        </li>
      </ul>
    </div>

    <button class="nav-toggle" aria-label="Toggle navigation">
      <span class="hamburger-line"></span>
      <span class="hamburger-line"></span>
      <span class="hamburger-line"></span>
    </button>
  </div>
</nav>

<style is:global>
  /* Base styles */
  .navbar {
    background: rgba(255, 255, 255, 0.98);
    backdrop-filter: blur(10px);
    position: fixed;
    top: 0;
    width: 100%;
    z-index: 1000;
    padding: 0;
    border-bottom: 1px solid rgba(0, 0, 0, 0.08);
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);
  }

  .nav-container {
    height: 3.5rem;
    max-width: 1600px;
    margin: 0 auto;
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0 1rem;
  }

  .nav-logo {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-weight: 700;
    font-size: 1.25rem;
    color: #2563eb;
    z-index: 1001;
  }

  .nav-logo a {
    text-decoration: none;
    color: inherit;
  }

  .nav-logo img {
    border-radius: 50%;
    width: 36px;
    height: 36px;
    object-fit: cover;
  }

  .nav-menu {
    display: flex;
    list-style: none;
    gap: 1.5rem;
    align-items: center;
    margin: 0;
    padding: 0;
  }

  .nav-menu a {
    text-decoration: none;
    color: #334155;
    font-weight: 500;
    transition: color 0.3s ease;
    font-size: 0.95rem;
  }

  .nav-menu a:hover {
    color: #2563eb;
  }

  .nav-toggle {
    display: none;
    flex-direction: column;
    background: none;
    border: none;
    cursor: pointer;
    padding: 0.5rem;
    z-index: 1001;
  }

  .hamburger-line {
    width: 22px;
    height: 2px;
    background: #334155;
    margin: 3px 0;
    transition: 0.3s;
    border-radius: 2px;
  }

  /* Dropdown styles */
  .dropdown {
    position: relative;
  }

  .dropdown-menu {
    position: absolute;
    top: 100%;
    left: 0;
    background: white;
    border: 1px solid rgba(0, 0, 0, 0.08);
    display: none;
    flex-direction: column;
    min-width: 200px;
    z-index: 1000;
    padding: 0.5rem 0;
    border-radius: 0.75rem;
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
  }

  .dropdown-menu li {
    list-style: none;
    margin: 0;
  }

  .dropdown-menu li a {
    padding: 0.75rem 1.25rem;
    display: block;
    text-decoration: none;
    color: #334155;
    transition: all 0.2s ease;
    font-size: 0.9rem;
  }

  .dropdown-menu li a:hover {
    background: #f1f5f9;
    color: #2563eb;
    padding-left: 1.5rem;
  }

  .dropdown:hover .dropdown-menu {
    display: flex;
    flex-direction: column;
  }

  .dropdown-chevron {
    font-size: 0.8rem;
    margin-left: 0.25rem;
    display: inline-block;
    transition: transform 0.3s ease;
  }

  .dropdown:hover .dropdown-chevron {
    transform: rotate(180deg);
  }

  /* External Links */
  .external-links {
    display: flex;
    gap: 0.75rem;
    align-items: center;
    margin: 0;
  }

  .external-btn {
    padding: 0.6rem 1.2rem;
    border-radius: 999px;
    font-weight: 600;
    font-size: 0.9rem;
    text-decoration: none;
    transition: all 0.3s ease;
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.08);
    white-space: nowrap;
  }

  .external-btn.kokpit {
    background: linear-gradient(135deg, #2563eb, #1d4ed8);
    color: white;
  }

  .external-btn.kokpit:hover {
    background: linear-gradient(135deg, #1d4ed8, #1e40af);
    box-shadow: 0 4px 12px rgba(37, 99, 235, 0.4);
    transform: translateY(-1px);
  }

  .external-btn.filo {
    background: linear-gradient(135deg, #111827, #1f2937);
    color: white;
  }

  .external-btn.filo:hover {
    background: linear-gradient(135deg, #1f2937, #374151);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.4);
    transform: translateY(-1px);
  }

  /* Mobile styles */
  @media (max-width: 1100px) {
    .nav-container {
      padding: 0 1rem;
    }

    .nav-toggle {
      display: flex;
    }

    .nav-menu-container {
      position: fixed;
      top: 0;
      left: -100%;
      width: 85%;
      max-width: 320px;
      height: 100vh;
      background: white;
      transition: all 0.4s ease;
      z-index: 1000;
      box-shadow: 2px 0 10px rgba(0, 0, 0, 0.1);
      overflow-y: auto;
      padding: 5rem 1.5rem 2rem;
    }

    .nav-menu-container.active {
      left: 0;
    }

    .nav-menu {
      flex-direction: column;
      align-items: flex-start;
      gap: 0;
      width: 100%;
    }

    .nav-menu > li {
      width: 100%;
      border-bottom: 1px solid #f1f5f9;
    }

    .nav-link {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 1rem 0;
      width: 100%;
      font-size: 1.1rem;
    }

    /* Dropdown styles for mobile */
    .dropdown-menu {
      position: static;
      display: none;
      width: 100%;
      border: none;
      box-shadow: none;
      padding: 0 0 0 1rem;
      margin: 0;
      background: #f8fafc;
      border-radius: 0.5rem;
      margin: 0.5rem 0;
    }

    .dropdown.active .dropdown-menu {
      display: flex;
    }

    .dropdown-menu li a {
      padding: 0.875rem 1rem;
      border-bottom: 1px solid #e2e8f0;
    }

    .dropdown-menu li:last-child a {
      border-bottom: none;
    }

    /* External links on mobile */
    .external-links {
      flex-direction: column;
      gap: 0.75rem;
      width: 100%;
      margin-top: 1.5rem;
      padding-top: 1.5rem;
      border-top: 1px solid #e2e8f0;
    }

    .external-btn {
      width: 100%;
      text-align: center;
      padding: 1rem;
      font-size: 1rem;
    }

    /* Hamburger animation */
    .nav-toggle.active .hamburger-line:nth-child(1) {
      transform: rotate(45deg) translate(5px, 5px);
    }

    .nav-toggle.active .hamburger-line:nth-child(2) {
      opacity: 0;
    }

    .nav-toggle.active .hamburger-line:nth-child(3) {
      transform: rotate(-45deg) translate(5px, -5px);
    }

    /* Overlay when menu is open */
    .nav-overlay {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, 0.5);
      z-index: 999;
      opacity: 0;
      visibility: hidden;
      transition: all 0.3s ease;
    }

    .nav-overlay.active {
      opacity: 1;
      visibility: visible;
    }
  }

  @media (max-width: 480px) {
    .nav-container {
      height: 3.25rem;
    }

    .nav-logo {
      font-size: 1.1rem;
    }

    .nav-logo img {
      width: 32px;
      height: 32px;
    }

    .nav-menu-container {
      width: 100%;
      max-width: none;
    }
  }
</style>

<script>
  const navToggle = document.querySelector(".nav-toggle");
  const navMenuContainer = document.querySelector(".nav-menu-container");
  const dropdowns = document.querySelectorAll(".dropdown");
  const navOverlay = document.createElement("div");

  // Create overlay element
  navOverlay.className = "nav-overlay";
  document.body.appendChild(navOverlay);

  let isMobile = window.innerWidth <= 1100;

  // Update on resize
  window.addEventListener("resize", () => {
    isMobile = window.innerWidth <= 1100;
    if (!isMobile) {
      closeMobileMenu();
    }
  });

  // Toggle mobile menu
  if (navToggle && navMenuContainer) {
    navToggle.addEventListener("click", (e) => {
      e.stopPropagation();
      toggleMobileMenu();
    });
  }

  // Close menu when clicking overlay
  navOverlay.addEventListener("click", closeMobileMenu);

  // Handle dropdowns on mobile
  dropdowns.forEach((dropdown) => {
    const link = dropdown.querySelector(".nav-link");
    if (!link) return;

    link.addEventListener("click", (e) => {
      const isMobileNow = window.innerWidth <= 1100; // check at click time

      if (!isMobileNow) {
        // Desktop → allow navigation
        return;
      }

      // Mobile → toggle dropdown instead of navigating
      e.preventDefault();
      e.stopPropagation();

      // Close other dropdowns
      dropdowns.forEach((other) => {
        if (other !== dropdown && other.classList.contains("active")) {
          other.classList.remove("active");
        }
      });

      // Toggle current dropdown
      dropdown.classList.toggle("active");
    });
  });

  // Close all when clicking outside
  document.addEventListener("click", (e) => {
    if (!isMobile) return;

    const target = e.target as Element; // assert it's not null
    if (
      !target.closest(".nav-menu-container") &&
      !target.closest(".nav-toggle")
    ) {
      closeMobileMenu();
    }
  });

  // Close on escape key
  document.addEventListener("keydown", (e) => {
    if (e.key === "Escape") {
      closeMobileMenu();
    }
  });

  // Close menu when clicking normal links
  const navLinks = document.querySelectorAll(".nav-menu a:not(.nav-link)");
  navLinks.forEach((link) => {
    link.addEventListener("click", () => {
      if (isMobile) {
        closeMobileMenu();
      }
    });
  });

  function toggleMobileMenu() {
    navMenuContainer?.classList.toggle("active");
    navOverlay.classList.toggle("active");
    navToggle?.classList.toggle("active");
    document.body.style.overflow = navMenuContainer?.classList.contains(
      "active"
    )
      ? "hidden"
      : "";
  }

  function closeMobileMenu() {
    navMenuContainer?.classList.remove("active");
    navOverlay.classList.remove("active");
    navToggle?.classList.remove("active");
    document.body.style.overflow = "";

    // Close all dropdowns
    dropdowns.forEach((dropdown) => {
      dropdown.classList.remove("active");
    });
  }
</script>
