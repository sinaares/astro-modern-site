---
// src/components/Navbar.astro

interface NavItem {
  label: string;
  href: string;
  submenu?: NavItem[];
}

interface Props {
  logoSrc: string;
  logoAlt: string;
  brandName: string;
  navItems: NavItem[];
  externalLinks: NavItem[];
}

const { logoSrc, logoAlt, brandName, navItems, externalLinks } = Astro.props;
---

<nav class="navbar">
  <div class="nav-container">
    <div class="nav-logo">
      <img src={logoSrc} alt={logoAlt} />
      <span><a href="/">{brandName}</a></span>
    </div>

    <div class="nav-menu-container">
      <ul class="nav-menu">
        {
          navItems.map((item) => (
            <li class={item.submenu ? "dropdown" : ""}>
              <a href={item.href} class="nav-link">
                {item.label}{" "}
                {item.submenu ? <span class="dropdown-chevron">▾</span> : ""}
              </a>
              {item.submenu && (
                <ul class="dropdown-menu">
                  {item.submenu.map((sub) => (
                    <li>
                      <a href={sub.href}>{sub.label}</a>
                    </li>
                  ))}
                </ul>
              )}
            </li>
          ))
        }

        {/* External links like Kokpit Giriş and TNB Filo Giriş */}
        <li class="external-links">
          {
            externalLinks.map((link) => (
              <a
                href={link.href}
                target="_blank"
                rel="noopener noreferrer"
                class={`external-btn ${
                  link.label.includes("Kokpit") ? "kokpit" : "filo"
                }`}
              >
                {link.label}
              </a>
            ))
          }
        </li>
      </ul>
    </div>

    <!-- Simple, Clean Hamburger Menu -->
    <button class="nav-toggle" aria-label="Toggle navigation">
      <span class="hamburger-line"></span>
      <span class="hamburger-line"></span>
      <span class="hamburger-line"></span>
    </button>
  </div>

  <!-- Overlay element -->
  <div class="nav-overlay"></div>
</nav>

<style is:global>
  /* Base styles */
  .navbar {
    background: rgba(255, 255, 255, 0.98);
    backdrop-filter: blur(10px);
    position: fixed;
    top: 0;
    width: 100%;
    z-index: 1000;
    padding: 0;
    border-bottom: 1px solid rgba(0, 0, 0, 0.08);
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);
  }

  .nav-container {
    height: 3.5rem;
    max-width: 1600px;
    margin: 0 auto;
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0 1rem;
  }

  .nav-logo {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-weight: 700;
    font-size: 1.25rem;
    color: #2563eb;
    z-index: 1001;
  }

  .nav-logo a {
    text-decoration: none;
    color: inherit;
  }

  .nav-logo img {
    border-radius: 50%;
    width: 36px;
    height: 36px;
    object-fit: cover;
  }

  .nav-menu {
    display: flex;
    list-style: none;
    gap: 1.5rem;
    align-items: center;
    margin: 0;
    padding: 0;
  }

  .nav-menu a {
    text-decoration: none;
    color: #334155;
    font-weight: 500;
    transition: color 0.3s ease;
    font-size: 0.95rem;
  }

  .nav-menu a:hover {
    color: #2563eb;
  }

  /* Simple, Clean Hamburger Menu */
  .nav-toggle {
    display: none;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    width: 44px;
    height: 44px;
    background: transparent;
    border: none;
    cursor: pointer;
    padding: 8px;
    border-radius: 8px;
    z-index: 1001;
    transition: all 0.3s ease;
    position: relative;
  }

  .nav-toggle:hover {
    background: rgba(37, 99, 235, 0.08);
  }

  .nav-toggle:active {
    transform: scale(0.95);
  }

  .hamburger-line {
    width: 24px;
    height: 3px;
    background: #334155;
    border-radius: 2px;
    transition: all 0.3s cubic-bezier(0.645, 0.045, 0.355, 1);
    transform-origin: center;
    margin: 2px 0;
  }

  /* Active state - Simple X animation */
  .nav-toggle.active .hamburger-line:nth-child(1) {
    transform: rotate(45deg) translate(5px, 5px);
    background: #dc2626;
  }

  .nav-toggle.active .hamburger-line:nth-child(2) {
    opacity: 0;
    transform: scale(0);
  }

  .nav-toggle.active .hamburger-line:nth-child(3) {
    transform: rotate(-45deg) translate(7px, -6px);
    background: #dc2626;
  }

  .nav-toggle.active {
    background: rgba(220, 38, 38, 0.1);
  }

  /* Dropdown styles */
  .dropdown {
    position: relative;
  }

  .dropdown-menu {
    position: absolute;
    top: 100%;
    left: 0;
    background: white;
    border: 1px solid rgba(0, 0, 0, 0.08);
    display: none;
    flex-direction: column;
    min-width: 200px;
    z-index: 1000;
    padding: 0.5rem 0;
    border-radius: 0.75rem;
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
  }

  .dropdown-menu li {
    list-style: none;
    margin: 0;
  }

  .dropdown-menu li a {
    padding: 0.75rem 1.25rem;
    display: block;
    text-decoration: none;
    color: #334155;
    transition: all 0.2s ease;
    font-size: 0.9rem;
  }

  .dropdown-menu li a:hover {
    background: #f1f5f9;
    color: #2563eb;
    padding-left: 1.5rem;
  }

  .dropdown:hover .dropdown-menu {
    display: flex;
    flex-direction: column;
  }

  .dropdown-chevron {
    font-size: 0.8rem;
    margin-left: 0.25rem;
    display: inline-block;
    transition: transform 0.3s ease;
  }

  .dropdown:hover .dropdown-chevron {
    transform: rotate(180deg);
  }

  /* External Links */
  .external-links {
    display: flex;
    gap: 0.75rem;
    align-items: center;
    margin: 0;
  }

  .external-btn {
    padding: 0.6rem 1.2rem;
    border-radius: 999px;
    font-weight: 600;
    font-size: 0.9rem;
    text-decoration: none;
    transition: all 0.3s ease;
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.08);
    white-space: nowrap;
  }

  .external-btn.kokpit {
    background: linear-gradient(135deg, #2563eb, #1d4ed8);
    color: white;
  }

  .external-btn.kokpit:hover {
    background: linear-gradient(135deg, #1d4ed8, #1e40af);
    box-shadow: 0 4px 12px rgba(37, 99, 235, 0.4);
    transform: translateY(-1px);
  }

  .external-btn.filo {
    background: linear-gradient(135deg, #111827, #1f2937);
    color: white;
  }

  .external-btn.filo:hover {
    background: linear-gradient(135deg, #1f2937, #374151);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.4);
    transform: translateY(-1px);
  }

  /* Overlay when menu is open */
  .nav-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.4);
    z-index: 999;
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease;
    backdrop-filter: blur(4px);
  }

  .nav-overlay.active {
    opacity: 1;
    visibility: visible;
  }

  /* Mobile and minimized desktop styles */
  @media (max-width: 1100px) {
    .nav-container {
      padding: 0 1rem;
    }

    .nav-toggle {
      display: flex;
    }

    .nav-menu-container {
      position: fixed;
      top: 0;
      left: -100%; /* slide from left */
      right: auto;
      width: 280px;
      height: 100vh;
      background: linear-gradient(135deg, #ffffff 0%, #f8fafc 100%);
      transition: left 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
      z-index: 1000;
      box-shadow: 8px 0 32px rgba(0, 0, 0, 0.12); /* shadow on right side */
      overflow-y: auto;
      padding: 80px 24px 24px;
      border-right: 1px solid rgba(226, 232, 240, 0.8); /* border on right */
      /* Fix for preventing overflow when closed */
      visibility: hidden;
    }

    .nav-menu-container.active {
      left: 0;
      visibility: visible;
    }

    .nav-menu {
      flex-direction: column;
      align-items: stretch;
      gap: 8px;
      width: 100%;
    }

    .nav-menu > li {
      width: 100%;
      opacity: 0;
      transform: translateX(20px);
      transition: all 0.3s ease;
      transition-delay: calc(var(--item-index, 0) * 50ms);
    }

    .nav-menu-container.active .nav-menu > li {
      opacity: 1;
      transform: translateX(0);
    }

    .nav-link {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 16px 20px;
      width: 50%;
      font-size: 16px;
      border-radius: 12px;
      background: rgba(255, 255, 255, 0.8);
      border: 1px solid rgba(226, 232, 240, 0.6);
      transition: all 0.2s ease;
      color: #334155;
      text-decoration: none;
    }

    .nav-link:hover {
      background: rgba(37, 99, 235, 0.05);
      border-color: rgba(37, 99, 235, 0.2);
      color: #2563eb;
      transform: translateX(4px);
    }

    /* Simple dropdown for mobile */
    .dropdown-menu {
      position: static;
      display: none;
      width: 50%;
      border: none;
      box-shadow: none;
      padding: 8px 0 0 0;
      margin: 8px 0 0 16px;
      background: transparent;
      border-radius: 0;
    }

    .dropdown.active .dropdown-menu {
      display: flex;
      flex-direction: column;
    }

    .dropdown-menu li a {
      padding: 12px 16px;
      background: rgba(241, 245, 249, 0.8);
      border: 1px solid rgba(226, 232, 240, 0.6);
      border-radius: 8px;
      margin-bottom: 4px;
      font-size: 14px;
      color: #64748b;
    }

    .dropdown-menu li a:hover {
      background: rgba(37, 99, 235, 0.08);
      color: #2563eb;
      transform: translateX(4px);
    }

    /* External links on mobile */
    .external-links {
      flex-direction: column;
      gap: 12px;
      width: 100%;
      margin-top: 24px;
      padding-top: 24px;
      border-top: 1px solid rgba(226, 232, 240, 0.6);
    }

    .external-btn {
      width: 70%;
      text-align: left;
      padding: 14px 20px;
      font-size: 15px;
      border-radius: 12px;
      transition: all 0.2s ease;
    }

    .external-btn:hover {
      transform: translateY(-1px);
    }
  }

  /* Tablet adjustments */
  @media (max-width: 1100px) {
    .nav-toggle {
      display: flex;
    }

    .nav-menu-container {
      width: 260px;
    }
  }

  /* Small mobile adjustments */
  @media (max-width: 480px) {
    .nav-container {
      height: 3.25rem;
      padding: 0 0.75rem;
    }

    .nav-logo {
      font-size: 1.1rem;
    }

    .nav-logo img {
      width: 32px;
      height: 32px;
    }

    .nav-menu-container {
      width: 100%;
      padding: 70px 20px 20px;
    }

    .nav-toggle {
      width: 40px;
      height: 40px;
      padding: 6px;
    }

    .hamburger-line {
      width: 20px;
      height: 2px;
      margin: 1.5px 0;
    }
  }

  /* Desktop hover effects */
  @media (min-width: 1200px) {
    .nav-menu > li {
      position: relative;
    }

    .nav-menu > li::after {
      content: "";
      position: absolute;
      bottom: -8px;
      left: 50%;
      width: 0;
      height: 2px;
      background: #2563eb;
      transition: all 0.3s ease;
      transform: translateX(-50%);
      border-radius: 1px;
    }

    .nav-menu > li:hover::after {
      width: 100%;
    }
  }
</style>

<script>
  const navToggle = document.querySelector(".nav-toggle") as HTMLElement | null;
  const navMenuContainer = document.querySelector(
    ".nav-menu-container"
  ) as HTMLElement | null;
  const navOverlay = document.querySelector(
    ".nav-overlay"
  ) as HTMLElement | null;

  // Add item index for staggered animations
  const navItems = document.querySelectorAll<HTMLElement>(".nav-menu > li");
  navItems.forEach((item, index) => {
    item.style.setProperty("--item-index", index.toString());
  });

  // Toggle menu open/close
  navToggle?.addEventListener("click", () => {
    if (!navMenuContainer) return;
    const isActive = navMenuContainer.classList.contains("active");
    isActive ? closeMenu() : openMenu();
  });

  function openMenu() {
    if (navMenuContainer && navOverlay && navToggle) {
      navMenuContainer.classList.add("active");
      navOverlay.classList.add("active");
      navToggle.classList.add("active");
      document.body.style.overflow = "hidden";
    }
  }

  function closeMenu() {
    if (navMenuContainer && navOverlay && navToggle) {
      navMenuContainer.classList.remove("active");
      navOverlay.classList.remove("active");
      navToggle.classList.remove("active");
      document.body.style.overflow = "";
    }

    // Close all dropdowns
    document
      .querySelectorAll<HTMLElement>(".dropdown.active")
      .forEach((dropdown) => {
        dropdown.classList.remove("active");
      });

    // Also explicitly hide all dropdown menus (fixes lingering items)
    document.querySelectorAll<HTMLElement>(".dropdown-menu").forEach((menu) => {
      menu.style.display = "none";
    });
  }

  // Close on overlay click
  navOverlay?.addEventListener("click", closeMenu);

  // Handle links & dropdown toggling
  document
    .querySelectorAll<HTMLAnchorElement>(".nav-menu a")
    .forEach((link) => {
      link.addEventListener("click", (e) => {
        const parentDropdown = link.closest(".dropdown");

        // Mobile dropdown toggle
        if (
          parentDropdown &&
          link === parentDropdown.querySelector(".nav-link") &&
          window.innerWidth <= 1100
        ) {
          e.preventDefault();
          parentDropdown.classList.toggle("active");
          const dropdownMenu =
            parentDropdown.querySelector<HTMLElement>(".dropdown-menu");
          dropdownMenu!.style.display = parentDropdown.classList.contains(
            "active"
          )
            ? "flex"
            : "none";
          return;
        }

        // For normal links: prevent instant jump
        if (window.innerWidth <= 1100) {
          e.preventDefault(); // stop instant navigation

          const href = link.href;

          closeMenu(); // start closing animation

          // Wait for animation to finish (~400ms)
          setTimeout(() => {
            window.location.href = href;
          }, 400);
        }
      });
    });

  // Close menu on escape key
  document.addEventListener("keydown", (e) => {
    if (e.key === "Escape") {
      closeMenu();
    }
  });

  // Close menu on resize (desktop mode)
  window.addEventListener("resize", () => {
    if (window.innerWidth > 1100) {
      closeMenu();
    }
  });
</script>
