---
// src/components/About.astro
import FloatingShapes from "../About/AboutFloatingShapes.astro";
import HeroSection from "../About/AboutHero.astro";
import ContentCard from "../About/AboutContentCard.astro";
import StorySection from "../About/AboutStorySection.astro";

interface Props {
  heroData: {
    title: string; // Changed from string[] to string
    description: string;
  };
  cards: Array<{
    title: string;
    icon: string;
    content: string[];
    quote?: string;
  }>;
  storyData: {
    text: string[];
    highlights: Array<{
      title: string;
      description: string;
    }>;
  };
}

const { heroData, cards, storyData } = Astro.props;
---

<section class="about-section">
  <FloatingShapes />

  <HeroSection title={heroData.title} description={heroData.description} />

  <div class="content-section">
    <div class="content-container">
      <div class="cards-grid">
        {cards.map((card) => <ContentCard {...card} />)}
      </div>

      <StorySection
        storyText={storyData.text}
        highlights={storyData.highlights}
      />
    </div>
  </div>
</section>

<style>
  .about-section {
    position: relative;
    min-height: 100vh;
    background: linear-gradient(180deg, #f8fafc 0%, #ffffff 50%, #f1f5f9 100%);
    overflow: hidden;
  }

  .content-section {
    position: relative;
    z-index: 2;
    padding: 60px 20px;
  }

  .content-container {
    max-width: 1400px;
    margin: 0 auto;
    display: grid;
    gap: 40px;
  }

  .cards-grid {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 30px;
    margin-bottom: 40px;
  }

  @media (max-width: 768px) {
    .cards-grid {
      grid-template-columns: 1fr;
      gap: 25px;
    }
  }
</style>

<script>
  const observer = new IntersectionObserver(
    (entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          (entry.target as HTMLElement).style.opacity = "1";
          (entry.target as HTMLElement).style.transform = "translateY(0)";
        }
      });
    },
    { threshold: 0.1, rootMargin: "0px 0px -100px 0px" }
  );

  document
    .querySelectorAll(".content-card, .story-section")
    .forEach((el, i) => {
      const element = el as HTMLElement;
      element.style.opacity = "0";
      element.style.transform = "translateY(50px)";
      element.style.transition = `opacity 0.8s ease ${i * 0.05}s, transform 0.8s ease ${i * 0.05}s`;
      observer.observe(element);
    });

  document.querySelectorAll(".highlight-item").forEach((el, i) => {
    const element = el as HTMLElement;
    element.style.opacity = "0";
    element.style.transform = "translateX(-30px)";
    element.style.transition = `opacity 0.6s ease ${i * 0.05 + 0.2}s, transform 0.6s ease ${i * 0.05 + 0.2}s`;
    observer.observe(element);
  });
</script>
